name: Build packages

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  UPLOAD_BIN_DIR: true
  TZ: Asia/Shanghai
  TERM: xterm-256color

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "下载依赖软件"
        sudo apt update -y
        sudo apt install aptitude -y
        sudo aptitude install build-essential asciidoc ack antlr3 autoconf automake autopoint binutils bison bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev -y &> /dev/null        
                
    - name: Get code
      run: |
        echo "下载lean的源码"
        git clone https://github.com/coolsnowwolf/lede.git && cd lede
        
    - name: Add package
      run: |
        cd /home/runner/work/Actions-OpenWrt-X86/Actions-OpenWrt-X86/lede/
        echo "添加ssr-plus"
        git clone https://github.com/fw876/helloworld.git ./package/ssr-plus
        echo "添加passwall"
        cd /home/runner/work/Actions-OpenWrt-X86/Actions-OpenWrt-X86/lede/
        git clone https://github.com/xiaorouji/openwrt-passwall.git -b packages ./package/passwall_package
        git clone https://github.com/xiaorouji/openwrt-passwall.git -b luci ./package/passwall
        cp -rf ./package/passwall_package/* ./package/passwall
        rm -rf ./package/passwall_package
        echo "添加passwall2"
        cd /home/runner/work/Actions-OpenWrt-X86/Actions-OpenWrt-X86/lede/
        git clone https://github.com/xiaorouji/openwrt-passwall2.git ./package/passwall2 
        
    - name: Upate and install feed
      run: |
        echo "更新、安装feed"
        cd /home/runner/work/Actions-OpenWrt-X86/Actions-OpenWrt-X86/lede/
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Add config file
      run: |    
        cd /home/runner/work/Actions-OpenWrt-X86/Actions-OpenWrt-X86/lede/
        rm -rf .config
        wget https://github.com/qqhpc/Actions-OpenWrt-X86/raw/main/config/.config
        echo "配置抓取完毕"
        
    - name: Compiling software
      run: |
        echo "开始下载dl"
        cd /home/runner/work/Actions-OpenWrt-X86/Actions-OpenWrt-X86/lede/
        make download -j8
        cd /home/runner/work/Actions-OpenWrt-X86/Actions-OpenWrt-X86/lede/
        echo "开始编译"
        make V=s -j1
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: /home/runner/work/Actions-OpenWrt-X86/Actions-OpenWrt-X86/lede/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        echo "pwd"
        pwd
        cd /home/runner/work/Actions-OpenWrt-X86/Actions-OpenWrt-X86/lede/bin/
        
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 10

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
        
